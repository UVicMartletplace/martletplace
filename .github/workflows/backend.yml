name: Backend

on:
  push:
    branches: ["master"]
  pull_request:

env:
  NODE_VERSION: "20.x"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, listing, review, message, lib]
      fail-fast: false
    defaults:
      run:
        working-directory: apps/backend/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  format:
    name: Format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, listing, review, message, lib]
      fail-fast: false
    defaults:
      run:
        working-directory: apps/backend/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Format
        run: npm run format:ci

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, listing, review, message, lib]
      fail-fast: false
    defaults:
      run:
        working-directory: apps/backend/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Test
        run: npm run test:ci

  sast:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, listing, review, message, lib]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Nodejs Scan
        uses: ajinabraham/njsscan-action@master
        with:
          args: './apps/backend/${{ matrix.service }}'

  supply:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, listing, review, message, lib]
      fail-fast: false
    defaults:
      run:
        working-directory: apps/backend/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: npm audit --audit-level high

  vuln:
    name: Run Trivy vulnerability scanner
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, listing, review, message]
        fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker compose up -d ${{ matrix.service }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: "martletplace-${{ matrix.service }}"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
