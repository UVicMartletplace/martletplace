name: Algorithm

on:
  push:
    branches: ["master"]
  pull_request:

env:
  PYTHON_VERSION: "3.12"

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [search, recommend]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: chartboost/ruff-action@v1
        with:
          src: "./apps/algorithm/${{ matrix.service }}"
          args: 'check'

  format:
    name: Format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [search, recommend]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: chartboost/ruff-action@v1
        with:
          src: "./apps/algorithm/${{ matrix.service }}"
          args: 'format --check'

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [search, recommend]
      fail-fast: false
    defaults:
      run:
        working-directory: apps/algorithm/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4

      - name: Docker Compose Up
        run: docker compose up -d ${{ matrix.service }} datalayer database elasticsearch

      - name: Test
        run: docker compose exec ${{ matrix.service }} pytest

  sast:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [search, recommend]
        fail-fast: false
    defaults:
      run:
        working-directory: apps/algorithm/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test
        run: bandit -c .bandit -ll -ii -n 3 -a file -r src/

  supply:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [search, recommend]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: pypa/gh-action-pip-audit@v1.0.8
        with:
          inputs: apps/algorithm/${{ matrix.service }}/requirements.txt
  vuln:
    name: Run Trivy vulnerability scanner
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [search, recommend]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker compose up -d ${{ matrix.service }} datalayer database elasticsearch 

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: "martletplace-${{ matrix.service }}"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'