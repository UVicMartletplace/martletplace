receivers:
  otlp:
    protocols:
      http:
        endpoint: 0.0.0.0:4318

processors:
  transform:
    error_mode: ignore
    trace_statements:
      context: span
      statements:
        - replace_pattern(attributes["db.statement"], "\\$\\d(::\\w+)?", "?")
        - replace_pattern(attributes["db.statement"], "\\n\\s*", " ")
        - replace_pattern(attributes["db.statement"], "^\\s+", "")
        - replace_pattern(attributes["db.statement"], "\\s+$", "")

  batch:
  tail_sampling:
    decision_wait: 5s
    policies: [{
      name: dont-sample-healthcheck,
      type: and,
      and:
        {
          and_sub_policy:
            [
              {
                name: route-live-ready-policy,
                type: string_attribute,
                string_attribute:
                  {
                    key: http.route,
                    values: ["/.well-known/health"],
                    invert_match: true,
                  },
              },
              {
                name: probabilistic-policy,
                type: probabilistic,
                probabilistic: { sampling_percentage: 100 },
              },
            ],
        },
      }]


exporters:
  otlp/jaeger:
    endpoint: http://jaeger:4317
    tls:
      insecure: true
  otlp/honeycomb:
    endpoint: http://api.honeycomb.io:443
    headers:
      "x-honeycomb-team": ""
  debug:
    verbosity: basic #detailed

extensions:
  health_check:
    path: "/.well-known/health"
    endpoint: "0.0.0.0:13133"

service:
  extensions: [health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [transform,tail_sampling,batch]
      exporters: [debug,otlp/jaeger]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [debug,otlp/jaeger]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [debug,otlp/jaeger]

